version: "3.9"

services:
  db:
    image: pgvector/pgvector:pg16
    container_name: aletheia-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  aletheia-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aletheia-api
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    restart: unless-stopped
    depends_on:
      - aletheia-api
    ports:
      - "3000:8080"
    environment:
      OPENAI_API_BASE_URL: ${OPENAI_API_BASE_URL:-http://aletheia-api:8000/v1}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-dev-placeholder-key}
      TZ: ${TZ:-UTC}
      # WEBUI_AUTH: ${WEBUI_AUTH:-false}
    volumes:
      - openwebui-data:/app/backend/data
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]

volumes:
  pgdata:
  openwebui-data:
